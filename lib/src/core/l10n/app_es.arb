{
  "profileTitle": "Ingeniero de Software | Desarrollador Full Stack Mobile | Flutter y C#",
  "adviseMessage": "Esta página está en desarrollo",
  "aboutMe": "Sobre mí",
  "myProjects": "Mis proyectos",
  "contact": "Contacto",
  "settings": "Configuraciones",
  "backToTop": "Volver arriba",
  "changeTheme": "Cambiar tema",
  "system": "Sistema",
  "light": "Claro",
  "dark": "Oscuro",
  "changeLanguage": "Cambiar idioma",
  "english": "Inglés",
  "portuguese": "Portugués",
  "spanish": "Español",
  "close": "Cerrar",
  "apresentationText1": "Con 5 años de experiencia profesional, en los últimos 3 años me he dedicado al desarrollo fullstack multiplataforma con Flutter y C# (.Net Core).",
  "apresentationText2": "Siempre estoy en busca de nuevas tecnologías y frameworks que puedan elevar mi trabajo. Tengo una habilidad natural para la colaboración en equipo y me encanta explorar la sinergia entre la creatividad y la tecnología.",
  "apresentationText3": "Mi conocimiento abarca una amplia variedad de áreas relacionadas con la ingeniería de software, destacando el framework Flutter.",
  "apresentationText4": "Estoy en busca de oportunidades estimulantes para aplicar mis habilidades y conocimientos en proyectos desafiantes. ¡Si buscas un ingeniero de software listo para aceptar cualquier desafío, estoy a tu disposición!",
  "contactDescription": "No dudes en ponerte en contacto conmigo utilizando una de las opciones a continuación:",
  "languages": "Lenguajes de programación en los que tengo experiencia y/o conocimiento:",
  "contactBy": "Ponte en contacto por ",
  "sendMeEmail": "Envíame un correo electrónico:",
  "subject": "Asunto",
  "message": "Mensaje",
  "clearFields": "Limpiar campos",
  "send": "Enviar",
  "preview": "Vista previa",
  "repository": "Repositorio",
  "download": "Descargar",
  "myFinances": "Mis Finanzas",
  "myFinancesDescription": "Una aplicación para el control financiero que te permitirá controlar tus gastos mensuales, inversiones y guardar anotaciones importantes. El proyecto aún está en desarrollo.",
  "pokedex": "Pokedex",
  "pokedexDescription": "Una aplicación de Pokémon desarrollada con Flutter. Desafío propuesto por la empresa Guarani Sistemas. La aplicación fue desarrollada utilizando Flutter y adoptando patrones de código limpio, siguiendo la arquitectura Clean con Modular para la gestión de rutas y GetX para la gestión del estado e inyección de dependencias, obteniendo datos de la API \"pokeapi.com\" utilizando la biblioteca http.",
  "gitf": "GitF",
  "gitfDescription": "Un gestor de repositorios Git para principiantes. Este proyecto fue creado solo para probar el desarrollo de aplicaciones de escritorio con Flutter.",
  "credentialsManager": "credentials_manager",
  "credentialsManagerDescription": "Una biblioteca para gestionar de forma fácil las credenciales de tu aplicación Flutter localmente, utilizando autenticación biométrica. Fue creada con el objetivo de agilizar la solución de un problema, en el que necesitaba almacenar credenciales de forma segura en un dispositivo, permitiendo que el usuario iniciara sesión con estas credenciales utilizando la biometría.",
  "simpleOverlay": "simple_overlay",
  "simpleOverlayDescription": "Una biblioteca simple y práctica para crear superposiciones fácilmente en tu aplicación Flutter. Con ella, puedes superponer un widget personalizado a cualquier otro widget. El enfoque de este paquete es agilizar la creación y gestión del ciclo de vida de una superposición.",
  "flutterBook": "FlutterBook",
  "flutterBookDescription": "Aplicación de blog. Desafío propuesto por la empresa TalkProcess. La aplicación fue desarrollada utilizando flutter y adoptando patrones de código limpio, siguiendo la arquitectura MVC (Modelo Vista Controlador) con GetX para el control de estados e inyección de dependencias, obteniendo datos de una API RESTful utilizando la biblioteca Dio, y utilizando Mockito para pruebas automatizadas.",
  "notesApp": "NotesApp",
  "notesAppDescription": "Una aplicación de notas desarrollada con Flutter. Desafío propuesto por la empresa Target Sistemas. La aplicación fue desarrollada utilizando Flutter y adoptando patrones de código limpio, siguiendo la arquitectura Clean con MobX para la gestión de estado, gestión de rutas nativas de Flutter y Shared Preferences para la persistencia de datos local.",
  "moviesChallenge": "Movies Challenge",
  "moviesChallengeDescription": "Aplicación de información de películas utilizando rest api, desafío propuesto por Cubos. El proyecto fue desarrollado utilizando modular con mobx y obteniendo datos de la api TMDB."
}